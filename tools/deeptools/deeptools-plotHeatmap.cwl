#!/usr/bin/env cwl-runner
cwlVersion: v1.0
class: CommandLineTool
requirements:
  - class: InlineJavascriptRequirement
  - class: StepInputExpressionRequirement

doc: |
  This tool creates a heatmap for scores associated with genomic regions. 
  The program requires a matrix file generated by the tool computeMatrix.

hints:
  ResourceRequirement:
    coresMin: 1
    ramMin: 20000
  DockerRequirement:
    dockerPull: kerstenbreuer/deeptools:3.1.1
  SoftwareRequirement:
    packages:
      deeptools:
        specs: [ "http://identifiers.org/biotools/deeptools" ]
        version: [ "3.1.1" ]

baseCommand: ["plotHeatmap"]
arguments: 
  - valueFrom: $(inputs.sample_id)
    prefix: --outFileName
    position: 10
  - valueFrom: $(inputs.sample_id).Matrix.tsv
    prefix: --outFileNameMatrix
    position: 10
  - valueFrom: $(inputs.sample_id).SortedRegions.bed
    prefix: --outFileSortedRegions
    position: 10

inputs:
  matrixFile:
    doc: Matrix file from the computeMatrix tool
    type: File
    inputBinding:
      prefix: --matrixFile
      position: 10
  interpolationMethod:
    doc: Possible choices to make() auto, nearest, bilinear, bicubic, gaussian)
      If the heatmap image contains a large number of columns is usually better 
      to use an interpolation method to produce better results 
      (see https://matplotlib.org/examples/images_contours_and_fields/interpolation_methods.html). 
      Be default, plotHeatmap uses the method nearest if the number of columns is 1000 or less. 
      Otherwise it uses the bilinear method. This default behaviour can be changed by using any 
      of the following options( “nearest”, “bilinear”, “bicubic”, “gaussian”)
    type: string
    inputBinding:
      prefix: --interpolationMethod
      position: 10
  dpi:
    doc: set the DPI to save the figure
    type: boolean?
    inputBinding:
      prefix: --dpi
      position: 10
  kmeans:
    doc: |
      Number of clusters to compute. When this option is set, the matrix is split into clusters 
      using the k-means algorithm. Only works for data that is not grouped, otherwise only the 
      first group will be clustered. If more specific clustering methods are required, then save 
      the underlying matrix and run the clustering using other software. The plotting of the 
      clustering may fail with an error if a cluster has very few members compared to the total 
      number or regions.
    type: int?
    inputBinding:
      prefix: --kmeans
      position: 10
  sample_id:
    type: string

outputs:
  heatmap:
    type: File
    outputBinding:
      glob: $(inputs.sample_id).heatmap.png